version: "3.5"

services:
  postgres:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"

  cardano-node:
    image: inputoutput/cardano-node:1.18.0
    environment:
      - NETWORK=${NETWORK:-mainnet}
    volumes:
      - node-db:/data/db
      - node-ipc:/ipc
    ports:
      - 3001:3001
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:3.1.0
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - cardano-node
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-db-sync-extended:
    image: inputoutput/cardano-db-sync:3.1.0
    command: [
      "--config", "/data/input-output-hk/cardano-graphql/config/network/mainnet/cardano-db-sync/config.json",
      "--socket-path", "/node-ipc/node.socket"
    ]
    environment:
      - EXTENDED=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - cardano-node
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - ./config/network/${NETWORK:-mainnet}/cardano-db-sync:/config
      - ./config/network/${NETWORK:-mainnet}/genesis:/genesis
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  hasura:
    build:
      context: /data/input-output-hk/cardano-graphql/packages/api-cardano-db-hasura/hasura
    image: inputoutput/cardano-graphql-hasura:2.0.0
    ports:
      - ${HASURA_PORT:-8090}:8080
    depends_on:
      - "postgres"
    restart: on-failure
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  cardano-graphql:
    build:
      context: .
      target: server
    image: inputoutput/cardano-graphql:2.0.0
    environment:
      - CACHE_ENABLED=true
      - GENESIS_FILE_BYRON=/genesis/byron.json
      - GENESIS_FILE_SHELLEY=/genesis/shelley.json
      - HASURA_URI=http://hasura:8080
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    expose:
      - 3100
    ports:
      - ${API_PORT:-3100}:3100
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    volumes:
      - ./config/network/${NETWORK:-mainnet}/genesis:/genesis

  cardano-explorer-api:
    image: inputoutput/cardano-explorer-api:-2.1.0
    depends_on:
      - postgres
      - cardano-db-sync
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    ports:
      - 8100:8100
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-submit-api:
    image: inputoutput/cardano-submit-api:2.1.0
    environment:
      - NETWORK=${NETWORK:-mainnet}
    depends_on:
      - cardano-node
    volumes:
      - node-ipc:/node-ipc
    ports:
      - 8092:8092
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-wallet:
    environment:
      - NETWORK=${NETWORK:-mainnet}
    image: inputoutput/cardano-wallet:latest
    volumes:
      - wallet-${NETWORK:-mainnet}-db:/wallet-db
      - node-ipc:/ipc
      - node-config:/config
    ports:
      - 8091:8091
    entrypoint: []
    command: bash -c "
        ([[ $$NETWORK == \"mainnet\" ]] && $$CMD --mainnet) ||
        ([[ $$NETWORK == \"mainnet_candidate*\" ]] && $$CMD --staging /config/*-$$NETWORK-byron-genesis.json) ||
        ($$CMD --testnet /config/*-$$NETWORK-byron-genesis.json)
      "
    environment:
      CMD: "cardano-wallet-shelley serve --node-socket /ipc/node.socket --database /wallet-db --listen-address 0.0.0.0"
      NETWORK:
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        compress: "true"
        max-file: "10"
        max-size: "50m"


secrets:
  postgres_db:
    file: ./config/secrets/postgres_db
  postgres_password:
    file: ./config/secrets/postgres_password
  postgres_user:
    file: ./config/secrets/postgres_user
volumes:
  node-db:
  node-ipc:
  postgres-data:

secrets:
  postgres_db:
    file: ./config/postgres_db
  postgres_password:
    file: ./config/postgres_password
  postgres_user:
    file: ./config/postgres_user

volumes:
  postgres:
  node-db:
  node-ipc:
  node-mainnet-db:
  node-testnet-db:
  node-mainnet_candidate-db:
  node-mainnet_candidate_2-db:
  node-mainnet_candidate_3-db:
  node-mainnet_candidate_4-db:
  wallet-mainnet-db:
  wallet-testnet-db:
  wallet-mainnet_candidate-db:
  wallet-mainnet_candidate_2-db:
  wallet-mainnet_candidate_3-db:
  wallet-mainnet_candidate_4-db:
  node-ipc:
  node-config:
  postgres-data: